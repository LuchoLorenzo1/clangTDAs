gcc -g -std=c99 -Wall -Wconversion -Wtype-limits -pedantic -Werror -O2 src/*.c pruebas_chanutron-x86_64.o -o pruebas_chanutron
valgrind --leak-check=full --track-origins=yes --show-reachable=yes --error-exitcode=2 --show-leak-kinds=all --trace-children=yes ./pruebas_chanutron 2>&1
==7266== Memcheck, a memory error detector
==7266== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==7266== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==7266== Command: ./pruebas_chanutron
==7266== 
[33;1m
Pruebas con lista vacía
========================[37;1m
[32;1m✓ [37;1mPuedo crear una lista
[32;1m✓ [37;1mLa lista recien creada está vacía
[32;1m✓ [37;1mUna lista recien creada contiene 0 elementos
[32;1m✓ [37;1mEl primer elemento de una lista vacía es NULL
[32;1m✓ [37;1mEl último elemento de una lista vacía es NULL
[32;1m✓ [37;1mBorrar al final de una lista sin elementos devuelve NULL
[32;1m✓ [37;1mBorrar en una posicion arbitraria de una lista sin elementos devuelve NULL
[32;1m✓ [37;1mPedir una posicion arbitraria a una lista sin elementos devuelve NULL
==7267== 
==7267== HEAP SUMMARY:
==7267==     in use at exit: 0 bytes in 0 blocks
==7267==   total heap usage: 2 allocs, 2 frees, 4,120 bytes allocated
==7267== 
==7267== All heap blocks were freed -- no leaks are possible
==7267== 
==7267== For lists of detected and suppressed errors, rerun with: -s
==7267== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[32;1m✓ [37;1mInsertar un elemento al final devuelve la lista
[32;1m✓ [37;1mLa lista tiene 1 elemento
[32;1m✓ [37;1mLa lista no está vacía
[32;1m✓ [37;1mInsertar un elemento al inicio devuelve la lista
[32;1m✓ [37;1mLa lista tiene 2 elementos
[32;1m✓ [37;1mInsertar un elemento en el medio devuelve la lista
[32;1m✓ [37;1mLa lista tiene 3 elementos
[32;1m✓ [37;1mInsertar un elemento en la posición 100 devuelve la lista
[32;1m✓ [37;1mLa lista tiene 4 elementos
[32;1m✓ [37;1mInsertar un elemento en la posición 2 devuelve la lista
[32;1m✓ [37;1mLa lista tiene 5 elementos
[32;1m✓ [37;1mInsertar un elemento en la posición 4 devuelve la lista
[32;1m✓ [37;1mLa lista tiene 6 elementos
[32;1m✓ [37;1mInsertar un elemento en la posición 6 devuelve la lista
[32;1m✓ [37;1mLa lista tiene 7 elementos
[32;1m✓ [37;1mEl primer elemento de la lista es el correcto
[32;1m✓ [37;1mEl elemento en la posición 0 es el correcto
[32;1m✓ [37;1mEl elemento en la posición 1 es el correcto
[32;1m✓ [37;1mEl elemento en la posición 2 es el correcto
[32;1m✓ [37;1mEl elemento en la posición 3 es el correcto
[32;1m✓ [37;1mEl elemento en la posición 4 es el correcto
[32;1m✓ [37;1mEl elemento en la posición 5 es el correcto
[32;1m✓ [37;1mEl elemento en la posición 6 es el correcto
[32;1m✓ [37;1mEl ultimo elemento es el correcto
==7268== 
==7268== HEAP SUMMARY:
==7268==     in use at exit: 0 bytes in 0 blocks
==7268==   total heap usage: 9 allocs, 9 frees, 4,232 bytes allocated
==7268== 
==7268== All heap blocks were freed -- no leaks are possible
==7268== 
==7268== For lists of detected and suppressed errors, rerun with: -s
==7268== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[32;1m✓ [37;1mPuedo borrar un elemento en una lista con un elemento
[32;1m✓ [37;1mBorrar el único elemento de la lista la deja vacía
[32;1m✓ [37;1mUna lista vacía tiene 0 elementos
[32;1m✓ [37;1mEl ultimo elemento de una lista vacía es NULL
[32;1m✓ [37;1mNo se puede borrar de una lista vacía
[32;1m✓ [37;1mPuedo insertar un elemento en una lista con un elemento borrado
[32;1m✓ [37;1mAl insertar un elemento la lista debe contener un elemento
[32;1m✓ [37;1mPuedo borrar un elemento de la lista
[32;1m✓ [37;1mAl borrar el elemento la lista queda con 0 elementos
==7269== 
==7269== HEAP SUMMARY:
==7269==     in use at exit: 0 bytes in 0 blocks
==7269==   total heap usage: 4 allocs, 4 frees, 4,152 bytes allocated
==7269== 
==7269== All heap blocks were freed -- no leaks are possible
==7269== 
==7269== For lists of detected and suppressed errors, rerun with: -s
==7269== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[32;1m✓ [37;1mPuedo borrar un elemento en una posición mayo a la cantidad de elementos
[32;1m✓ [37;1mEl último elemento es el correcto luego de borrar
[32;1m✓ [37;1mEl elemento en la última posición es el mismo que el de la última posición
[32;1m✓ [37;1mLuego de borrar queda la cantidad correcta de elementos en la lista
[32;1m✓ [37;1mPuedo borrar el elemento en posición 0
[32;1m✓ [37;1mEl primer elemento de la lista es el correcto luego de borrar
[32;1m✓ [37;1mEl elemento en posición 0 es el mismo que el primero
[32;1m✓ [37;1mLuego de borrar queda la cantidad correcta de elementos en la lista
[32;1m✓ [37;1mPuedo borrar el elemento en posición 1
[32;1m✓ [37;1mLuego de borrar queda la cantidad correcta de elementos en la lista
[32;1m✓ [37;1mEl elemento en posición 1 es el correcto
[32;1m✓ [37;1mPuedo borrar el ultimo elemento
[32;1m✓ [37;1mLuego de borrar queda la cantidad correcta de elementos en la lista
[32;1m✓ [37;1mEl ultimo elemento el correcto
==7270== 
==7270== HEAP SUMMARY:
==7270==     in use at exit: 0 bytes in 0 blocks
==7270==   total heap usage: 9 allocs, 9 frees, 4,232 bytes allocated
==7270== 
==7270== All heap blocks were freed -- no leaks are possible
==7270== 
==7270== For lists of detected and suppressed errors, rerun with: -s
==7270== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[32;1m✓ [37;1mPuedo insertar varias veces al final de una lista
[32;1m✓ [37;1mPuedo borrar todos los elementos borrando siempre el último
[32;1m✓ [37;1mLos elementos borrados se encontraban en el orden esperado
[32;1m✓ [37;1mLa lista quedó vacía después de eliminar todo
[32;1m✓ [37;1mPuedo volver a insertar varias veces al final de la lista
==7271== 
==7271== HEAP SUMMARY:
==7271==     in use at exit: 0 bytes in 0 blocks
==7271==   total heap usage: 42 allocs, 42 frees, 4,760 bytes allocated
==7271== 
==7271== All heap blocks were freed -- no leaks are possible
==7271== 
==7271== For lists of detected and suppressed errors, rerun with: -s
==7271== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[32;1m✓ [37;1mPuedo insertar varias veces al inicio de una lista
[32;1m✓ [37;1mPuedo borrar todos los elementos borrando siempre el primero
[32;1m✓ [37;1mLos elementos borrados se encontraban en el orden esperado
[32;1m✓ [37;1mLa lista quedó vacía después de eliminar todo
[32;1m✓ [37;1mPuedo volver a insertar varias veces al inicio de la lista
==7272== 
==7272== HEAP SUMMARY:
==7272==     in use at exit: 0 bytes in 0 blocks
==7272==   total heap usage: 42 allocs, 42 frees, 4,760 bytes allocated
==7272== 
==7272== All heap blocks were freed -- no leaks are possible
==7272== 
==7272== For lists of detected and suppressed errors, rerun with: -s
==7272== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[32;1m✓ [37;1mUna lista nula es vacía
[32;1m✓ [37;1mUna lista nula tiene 0 elementos
[32;1m✓ [37;1mEl primer elemento de una lista nula es nulo
[32;1m✓ [37;1mEl ultimo elemento de una lista nula es nulo
[32;1m✓ [37;1mUn elemento arbitrario de una lista nula es nulo
[32;1m✓ [37;1mEs un error borrar del final de una lista nula
[32;1m✓ [37;1mEs un error borrar del inicio de una lista nula
[32;1m✓ [37;1mEs un error borrar de cualquier posición de una lista nula
[32;1m✓ [37;1mEs un error insertar al final de una lista nula
[32;1m✓ [37;1mEs un error insertar en cualquier posición de una lista nula
[32;1m✓ [37;1mEs un error insertar al inicio de una lista nula
[32;1m✓ [37;1mUn iterador de una lista nula es nulo
[32;1m✓ [37;1mRecorrer una lista nulo con el iterador interno recorre 0 elementos
==7273== 
==7273== HEAP SUMMARY:
==7273==     in use at exit: 0 bytes in 0 blocks
==7273==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7273== 
==7273== All heap blocks were freed -- no leaks are possible
==7273== 
==7273== For lists of detected and suppressed errors, rerun with: -s
==7273== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[32;1m✓ [37;1mSe pueden insertar exitosamente 5k elementos en la lista
[32;1m✓ [37;1mSe pueden borrar 1k elementos del inicio de la lista
[32;1m✓ [37;1mSe pueden borrar 1k elementos del medio de la lista
[32;1m✓ [37;1mSe pueden borrar 3k elementos del final de la lista
==7274== 
==7274== HEAP SUMMARY:
==7274==     in use at exit: 0 bytes in 0 blocks
==7274==   total heap usage: 5,002 allocs, 5,002 frees, 84,120 bytes allocated
==7274== 
==7274== All heap blocks were freed -- no leaks are possible
==7274== 
==7274== For lists of detected and suppressed errors, rerun with: -s
==7274== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[32;1m✓ [37;1mPuedo insertar elementos en posiciones inexistentes en una lista vacía
[32;1m✓ [37;1mEl elemento insertado queda en posición 0
[32;1m✓ [37;1mPuedo insertar elementos en posiciones inexistentes en una lista con un elemento
[32;1m✓ [37;1mEl elemento insertado queda en posición 1
[32;1m✓ [37;1mPuedo insertar un elemento en la posición 0 de la lista
[32;1m✓ [37;1mEl elemento insertado queda en posición 0
[32;1m✓ [37;1mEl elemento que estaba en la posición 0 ahora está en la 1
[32;1m✓ [37;1mEl elemento que estaba en la posición 1 ahora está en la 2
[32;1m✓ [37;1mPuedo insertar un elemento en la posición 1 de la lista
[32;1m✓ [37;1mEl elemento insertado queda en posición 1
[32;1m✓ [37;1mEl elemento que estaba en la posición 1 ahora está en la 2
[32;1m✓ [37;1mEl elemento que estaba en la posición 2 ahora está en la 3
==7275== 
==7275== HEAP SUMMARY:
==7275==     in use at exit: 0 bytes in 0 blocks
==7275==   total heap usage: 6 allocs, 6 frees, 4,184 bytes allocated
==7275== 
==7275== All heap blocks were freed -- no leaks are possible
==7275== 
==7275== For lists of detected and suppressed errors, rerun with: -s
==7275== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[32;1m✓ [37;1mPuedo crear un iterador con una lista vacía
[32;1m✓ [37;1mEl iterador de una lista vacía no tiene siguiente
[32;1m✓ [37;1mEl elemento actual de un iterador de lista vacía siempre es NULL
[32;1m✓ [37;1mEl elemento actual de un iterador de lista vacía siempre es NULL (otra vez)
[32;1m✓ [37;1mEl iterador de una lista vacía no puede avanzar
[32;1m✓ [37;1mEl iterador de una lista vacía no tiene siguiente luego de avanzar
[32;1m✓ [37;1mEl elemento actual de un iterador de lista vacía siempre es NULL aun despues de avanzar
[32;1m✓ [37;1mPuedo crear un iterador con una lista no vacía
[32;1m✓ [37;1mEl iterador de una lista no vacía tiene siguiente
[32;1m✓ [37;1mEl elemento actual de un iterador de lista no vacía es el primer elemento
[32;1m✓ [37;1mPuedo avanzar el iterador de una lista no vacía
[32;1m✓ [37;1mEl elemento actual del iterador es el correcto
[32;1m✓ [37;1mAvanzar el iterador devuelve TRUE si no estoy en el último elemento
[32;1m✓ [37;1mEl elemento actual del iterador es el correcto
[32;1m✓ [37;1mAvanzar el iterador devuelve TRUE si no estoy en el último elemento
[32;1m✓ [37;1mEl elemento actual del iterador es el correcto
[32;1m✓ [37;1mAvanzar el iterador devuelve TRUE si no estoy en el último elemento
[32;1m✓ [37;1mEl elemento actual del iterador es el correcto
[32;1m✓ [37;1mAvanzar el iterador devuelve TRUE si no estoy en el último elemento
[32;1m✓ [37;1mEl elemento actual del iterador es el correcto
[32;1m✓ [37;1mAvanzar el iterador devuelve TRUE si no estoy en el último elemento
[32;1m✓ [37;1mEl elemento actual del iterador es el correcto
[32;1m✓ [37;1mAvanzar el iterador devuelve TRUE si no estoy en el último elemento
[32;1m✓ [37;1mEl elemento actual del iterador es el correcto
[32;1m✓ [37;1mAvanzar el iterador devuelve TRUE si no estoy en el último elemento
[32;1m✓ [37;1mEl elemento actual del iterador es el correcto
[32;1m✓ [37;1mAvanzar el iterador devuelve FALSE si estoy en el último elemento
[32;1m✓ [37;1mAl iterar, se iteran exactamente la misma cantidad de elementos de la lista
[32;1m✓ [37;1mEl elemento actual del iterador es NULL
==7276== 
==7276== HEAP SUMMARY:
==7276==     in use at exit: 0 bytes in 0 blocks
==7276==   total heap usage: 16 allocs, 16 frees, 4,352 bytes allocated
==7276== 
==7276== All heap blocks were freed -- no leaks are possible
==7276== 
==7276== For lists of detected and suppressed errors, rerun with: -s
==7276== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[32;1m✓ [37;1mNo puedo iterar una lista sin función de iteración
[32;1m✓ [37;1mEl elemento iterado coincide con el valor esperado
[32;1m✓ [37;1mEl elemento iterado coincide con el valor esperado
[32;1m✓ [37;1mEl elemento iterado coincide con el valor esperado
[32;1m✓ [37;1mEl elemento iterado coincide con el valor esperado
[32;1m✓ [37;1mEl elemento iterado coincide con el valor esperado
[32;1m✓ [37;1mEl elemento iterado coincide con el valor esperado
[32;1m✓ [37;1mEl elemento iterado coincide con el valor esperado
[32;1m✓ [37;1mEl elemento iterado coincide con el valor esperado
[32;1m✓ [37;1mSe iteraron todos los elementos esperados
[32;1m✓ [37;1mSe iteraron todos los elementos esperados
==7277== 
==7277== HEAP SUMMARY:
==7277==     in use at exit: 0 bytes in 0 blocks
==7277==   total heap usage: 10 allocs, 10 frees, 4,248 bytes allocated
==7277== 
==7277== All heap blocks were freed -- no leaks are possible
==7277== 
==7277== For lists of detected and suppressed errors, rerun with: -s
==7277== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[32;1m✓ [37;1mBuscar un elemento en una lista vacía resulta en NULL
[32;1m✓ [37;1mBuscar el primer elemento de la lista encuentra el elemento
[32;1m✓ [37;1mBuscar el ultimo elemento de la lista encuentra el elemento
[32;1m✓ [37;1mBuscar un elemento la lista encuentra el elemento
[32;1m✓ [37;1mBuscar un elemento inexistente la lista devuelve NULL
[32;1m✓ [37;1mBuscar un elemento con una función NULL devuelve NULL
[32;1m✓ [37;1mBuscar un elemento usando un contexto NULL funciona correctamente
==7278== 
==7278== HEAP SUMMARY:
==7278==     in use at exit: 0 bytes in 0 blocks
==7278==   total heap usage: 12 allocs, 12 frees, 4,280 bytes allocated
==7278== 
==7278== All heap blocks were freed -- no leaks are possible
==7278== 
==7278== For lists of detected and suppressed errors, rerun with: -s
==7278== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[32;1m✓ [37;1mDestruir todo destruye todos los elementos
[32;1m✓ [37;1mDestruir todo con función NULL no destruye todos los elementos
[32;1m✓ [37;1mDestruir todo con lista NULL no es un error
==7279== 
==7279== HEAP SUMMARY:
==7279==     in use at exit: 0 bytes in 0 blocks
==7279==   total heap usage: 23 allocs, 23 frees, 4,464 bytes allocated
==7279== 
==7279== All heap blocks were freed -- no leaks are possible
==7279== 
==7279== For lists of detected and suppressed errors, rerun with: -s
==7279== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[32;1m✓ [37;1mPuedo apilar algunos valores en la pila
==7280== 
==7280== HEAP SUMMARY:
==7280==     in use at exit: 0 bytes in 0 blocks
==7280==   total heap usage: 14 allocs, 14 frees, 4,312 bytes allocated
==7280== 
==7280== All heap blocks were freed -- no leaks are possible
==7280== 
==7280== For lists of detected and suppressed errors, rerun with: -s
==7280== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[32;1m✓ [37;1mPuedo encolar algunos valores en la cola
[32;1m✓ [37;1mEl primer elemento de la cola es el esperado
[32;1m✓ [37;1mPuedo desencolar el elemento
[32;1m✓ [37;1mEl primer elemento de la cola es el esperado
[32;1m✓ [37;1mPuedo desencolar el elemento
[32;1m✓ [37;1mEl primer elemento de la cola es el esperado
[32;1m✓ [37;1mPuedo desencolar el elemento
[32;1m✓ [37;1mEl primer elemento de la cola es el esperado
[32;1m✓ [37;1mPuedo desencolar el elemento
[32;1m✓ [37;1mEl primer elemento de la cola es el esperado
[32;1m✓ [37;1mPuedo desencolar el elemento
[32;1m✓ [37;1mEl primer elemento de la cola es el esperado
[32;1m✓ [37;1mPuedo desencolar el elemento
[32;1m✓ [37;1mEl primer elemento de la cola es el esperado
[32;1m✓ [37;1mPuedo desencolar el elemento
[32;1m✓ [37;1mEl primer elemento de la cola es el esperado
[32;1m✓ [37;1mPuedo desencolar el elemento
==7281== 
==7281== HEAP SUMMARY:
==7281==     in use at exit: 0 bytes in 0 blocks
==7281==   total heap usage: 10 allocs, 10 frees, 4,248 bytes allocated
==7281== 
==7281== All heap blocks were freed -- no leaks are possible
==7281== 
==7281== For lists of detected and suppressed errors, rerun with: -s
==7281== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
==7282== 
==7282== HEAP SUMMARY:
==7282==     in use at exit: 0 bytes in 0 blocks
==7282==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7282== 
==7282== All heap blocks were freed -- no leaks are possible
==7282== 
==7282== For lists of detected and suppressed errors, rerun with: -s
==7282== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
Destruir lista NULL no genera error
===================================[37;1m
[32;1m✓ [37;1mSe envia una lista nula a lista_destruir y no se genera error
==7284== 
==7284== HEAP SUMMARY:
==7284==     in use at exit: 0 bytes in 0 blocks
==7284==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7284== 
==7284== All heap blocks were freed -- no leaks are possible
==7284== 
==7284== For lists of detected and suppressed errors, rerun with: -s
==7284== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
Destruir lista NULL no genera error
===================================[37;1m
[33;1m
Pruebas de crear y destruir una lista
=====================================[37;1m
[32;1m✓ [37;1mSe crea la lista.
[32;1m✓ [37;1mEl tamaño de la lista es 0
[32;1m✓ [37;1mLa lista está vacía
==7285== 
==7285== HEAP SUMMARY:
==7285==     in use at exit: 0 bytes in 0 blocks
==7285==   total heap usage: 2 allocs, 2 frees, 4,120 bytes allocated
==7285== 
==7285== All heap blocks were freed -- no leaks are possible
==7285== 
==7285== For lists of detected and suppressed errors, rerun with: -s
==7285== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
Destruir lista NULL no genera error
===================================[37;1m
[33;1m
Pruebas de crear y destruir una lista
=====================================[37;1m
==7283== 
==7283== HEAP SUMMARY:
==7283==     in use at exit: 0 bytes in 0 blocks
==7283==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7283== 
==7283== All heap blocks were freed -- no leaks are possible
==7283== 
==7283== For lists of detected and suppressed errors, rerun with: -s
==7283== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
Lista NULL
==========[37;1m
[32;1m✓ [37;1mNo se puede insertar en una lista inválida.
==7287== 
==7287== HEAP SUMMARY:
==7287==     in use at exit: 0 bytes in 0 blocks
==7287==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7287== 
==7287== All heap blocks were freed -- no leaks are possible
==7287== 
==7287== For lists of detected and suppressed errors, rerun with: -s
==7287== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
Lista NULL
==========[37;1m
[33;1m
Insertar un elemento
====================[37;1m
[32;1m✓ [37;1mEs posible insertar un elemento en la lista
[32;1m✓ [37;1mEs posible insertar un elemento nulo en la lista
[32;1m✓ [37;1mEs posible insertar un elemento que vive en el heap en la lista
==7288== 
==7288== HEAP SUMMARY:
==7288==     in use at exit: 0 bytes in 0 blocks
==7288==   total heap usage: 8 allocs, 8 frees, 4,220 bytes allocated
==7288== 
==7288== All heap blocks were freed -- no leaks are possible
==7288== 
==7288== For lists of detected and suppressed errors, rerun with: -s
==7288== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
Lista NULL
==========[37;1m
[33;1m
Insertar un elemento
====================[37;1m
[33;1m
Insertar varios elementos
=========================[37;1m
[32;1m✓ [37;1mEs posible insertar un elemento en la lista
[32;1m✓ [37;1mEs posible insertar otro elemento en la lista
[32;1m✓ [37;1mEs posible insertar otro elemento en la lista
[32;1m✓ [37;1mEs posible insertar otro elemento en la lista
[32;1m✓ [37;1mEs posible insertar otro elemento en la lista
[32;1m✓ [37;1mEs posible insertar un elemento repetido en la lista
[32;1m✓ [37;1mEl primer elemento de la lista es el correcto
[32;1m✓ [37;1mEl segundo elemento de la lista es el correcto
[32;1m✓ [37;1mEl cuarto elemento de la lista es el correcto
[32;1m✓ [37;1mEl último elemento de la lista es el correcto
[32;1m✓ [37;1mEl tercer elemento no está en la quinta posición
==7289== 
==7289== HEAP SUMMARY:
==7289==     in use at exit: 0 bytes in 0 blocks
==7289==   total heap usage: 8 allocs, 8 frees, 4,216 bytes allocated
==7289== 
==7289== All heap blocks were freed -- no leaks are possible
==7289== 
==7289== For lists of detected and suppressed errors, rerun with: -s
==7289== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
Lista NULL
==========[37;1m
[33;1m
Insertar un elemento
====================[37;1m
[33;1m
Insertar varios elementos
=========================[37;1m
[33;1m
Insertar un elemento en posicion
================================[37;1m
[32;1m✓ [37;1mEs posible insertar un elemento en la primera posición de una lista vacía
[32;1m✓ [37;1mEl elemento está en la posición 0
[32;1m✓ [37;1mEs posible insertar un elemento nulo en la primera posicion de una lista vacía
[32;1m✓ [37;1mEl elemento está en la posición 0
[32;1m✓ [37;1mEs posible insertar un elemento que vive en el heap en la primera posición de una lista vacía
[32;1m✓ [37;1mEl elemento está en la posición 0
[32;1m✓ [37;1mEs posible insertar un elemento en la posición 14 de una lista vacía
[32;1m✓ [37;1mEl elemento no está en la posición 14
[32;1m✓ [37;1mEl elemento está en la posición 0
==7290== 
==7290== HEAP SUMMARY:
==7290==     in use at exit: 0 bytes in 0 blocks
==7290==   total heap usage: 10 allocs, 10 frees, 4,260 bytes allocated
==7290== 
==7290== All heap blocks were freed -- no leaks are possible
==7290== 
==7290== For lists of detected and suppressed errors, rerun with: -s
==7290== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
Lista NULL
==========[37;1m
[33;1m
Insertar un elemento
====================[37;1m
[33;1m
Insertar varios elementos
=========================[37;1m
[33;1m
Insertar un elemento en posicion
================================[37;1m
[33;1m
Insertar varios elementos en posicion
=====================================[37;1m
[32;1m✓ [37;1mEs posible insertar un elemento en la lista
[32;1m✓ [37;1mEs posible insertar otro elemento en la lista
[32;1m✓ [37;1mEs posible insertar otro elemento en la lista
[32;1m✓ [37;1mEs posible insertar otro elemento en la lista
[32;1m✓ [37;1mEs posible insertar otro elemento en la lista
[32;1m✓ [37;1mEs posible insertar un elemento repetido en la lista
[32;1m✓ [37;1mEl primer elemento de la lista es el correcto
[32;1m✓ [37;1mEl segundo elemento de la lista es el correcto
[32;1m✓ [37;1mEl tercer elemento no está en la quinta posición
[32;1m✓ [37;1mEl tercer elemento está en la tercera posición
[32;1m✓ [37;1mEl cuarto elemento de la lista es el correcto
[32;1m✓ [37;1mEl quinto elemento está en la quinta posición
[32;1m✓ [37;1mEl último elemento de la lista es el correcto
[32;1m✓ [37;1mEs posible insertar un elemento nuevo al principio de la lista
[32;1m✓ [37;1mEl primer elemento es el que acabo de insertar
[32;1m✓ [37;1mEl segundo elemento de la lista es el que antes era el primero. Se movió correctamente
[32;1m✓ [37;1mEs posible insertar un elemento nuevo en una posición inexistente de la lista
[32;1m✓ [37;1mLa posición inexistente no posee elementos
[32;1m✓ [37;1mEl elemento se insertó en la última posición disponible
[32;1m✓ [37;1mEl elemento que antes era el último no se movió
[32;1m✓ [37;1mEs posible insertar un elemento nuevo en una posición intermedia de la lista
[32;1m✓ [37;1mEse elemento está en la posición correcta de la lista
[32;1m✓ [37;1mEl elemento anterior es el correcto
[32;1m✓ [37;1mEl siguiente elemento es el correcto
==7291== 
==7291== HEAP SUMMARY:
==7291==     in use at exit: 0 bytes in 0 blocks
==7291==   total heap usage: 11 allocs, 11 frees, 4,264 bytes allocated
==7291== 
==7291== All heap blocks were freed -- no leaks are possible
==7291== 
==7291== For lists of detected and suppressed errors, rerun with: -s
==7291== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
Lista NULL
==========[37;1m
[33;1m
Insertar un elemento
====================[37;1m
[33;1m
Insertar varios elementos
=========================[37;1m
[33;1m
Insertar un elemento en posicion
================================[37;1m
[33;1m
Insertar varios elementos en posicion
=====================================[37;1m
==7286== 
==7286== HEAP SUMMARY:
==7286==     in use at exit: 0 bytes in 0 blocks
==7286==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7286== 
==7286== All heap blocks were freed -- no leaks are possible
==7286== 
==7286== For lists of detected and suppressed errors, rerun with: -s
==7286== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[32;1m✓ [37;1mNo se puede eliminar de una lista nula
[32;1m✓ [37;1mNo se puede eliminar de una lista vacía
==7293== 
==7293== HEAP SUMMARY:
==7293==     in use at exit: 0 bytes in 0 blocks
==7293==   total heap usage: 2 allocs, 2 frees, 4,120 bytes allocated
==7293== 
==7293== All heap blocks were freed -- no leaks are possible
==7293== 
==7293== For lists of detected and suppressed errors, rerun with: -s
==7293== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Eliminar un elemento
====================[37;1m
[32;1m✓ [37;1mSe tiene una lista con un elemento. El tamaño de la misma es 1
[32;1m✓ [37;1mLa lista no está vacía
[32;1m✓ [37;1mEs posible eliminar este elemento
[32;1m✓ [37;1mEl tamaño de la lista ahora es 0
[32;1m✓ [37;1mLa lista está vacía
==7294== 
==7294== HEAP SUMMARY:
==7294==     in use at exit: 0 bytes in 0 blocks
==7294==   total heap usage: 3 allocs, 3 frees, 4,136 bytes allocated
==7294== 
==7294== All heap blocks were freed -- no leaks are possible
==7294== 
==7294== For lists of detected and suppressed errors, rerun with: -s
==7294== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Eliminar un elemento
====================[37;1m
[33;1m
Eliminar varios elementos iguales
=================================[37;1m
[32;1m✓ [37;1mSe tiene una lista con 500 elementos
[32;1m✓ [37;1mLa lista no está vacía
[32;1m✓ [37;1mEs posible eliminar un elemento
[32;1m✓ [37;1mEl tamaño de la lista ahora es 499
[32;1m✓ [37;1mEs posible eliminar 498 de los elementos restantes
[32;1m✓ [37;1mEl tamaño de la lista ahora es 1
[32;1m✓ [37;1mEs posible eliminar el último elemento
[32;1m✓ [37;1mEl tamaño de la lista ahora es 0
[32;1m✓ [37;1mLa lista está vacía
==7295== 
==7295== HEAP SUMMARY:
==7295==     in use at exit: 0 bytes in 0 blocks
==7295==   total heap usage: 502 allocs, 502 frees, 12,120 bytes allocated
==7295== 
==7295== All heap blocks were freed -- no leaks are possible
==7295== 
==7295== For lists of detected and suppressed errors, rerun with: -s
==7295== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Eliminar un elemento
====================[37;1m
[33;1m
Eliminar varios elementos iguales
=================================[37;1m
[33;1m
Agregar, eliminar y volver a agregar
====================================[37;1m
[32;1m✓ [37;1mSe inserta un elemento en la lista y éste está correctamente posicionado
[32;1m✓ [37;1mLa lista tiene un elemento
[32;1m✓ [37;1mSe inserta un elemento en la lista y éste está correctamente posicionado
[32;1m✓ [37;1mSe inserta un elemento en la lista y éste está correctamente posicionado
[32;1m✓ [37;1mSe inserta un elemento en la lista y éste está correctamente posicionado
[32;1m✓ [37;1mLa lista tiene 4 elementos
[32;1m✓ [37;1mSe puede quitar el último elemento
[32;1m✓ [37;1mEl primer elemento se mantiene
[32;1m✓ [37;1mEl segundo elemento se mantiene
[32;1m✓ [37;1mEl tercer elemento se mantiene
[32;1m✓ [37;1mYa no existe la cuarta posición en la lista
[32;1m✓ [37;1mLa lista tiene 3 elementos
[32;1m✓ [37;1mVuelvo a quitar el último elemento
[32;1m✓ [37;1mVuelvo a quitar el último elemento
[32;1m✓ [37;1mEl primer elemento se mantiene
[32;1m✓ [37;1mYa no existe la segunda posición en la lista
[32;1m✓ [37;1mYa no existe la tercera posición en la lista
[32;1m✓ [37;1mLa lista tiene 1 elemento
[32;1m✓ [37;1mReinserto el tercer elemento en la lista.
[32;1m✓ [37;1mEl primer elemento se mantiene
[32;1m✓ [37;1mEl segundo elemento es el correcto
[32;1m✓ [37;1mSigue sin existir la tercera posición en la lista
[32;1m✓ [37;1mLa lista tiene 2 elementos
[32;1m✓ [37;1mSe puede insertar un elemento nuevo en la lista.
[32;1m✓ [37;1mLa lista tiene 3 elementos
==7296== 
==7296== HEAP SUMMARY:
==7296==     in use at exit: 0 bytes in 0 blocks
==7296==   total heap usage: 8 allocs, 8 frees, 4,216 bytes allocated
==7296== 
==7296== All heap blocks were freed -- no leaks are possible
==7296== 
==7296== For lists of detected and suppressed errors, rerun with: -s
==7296== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Eliminar un elemento
====================[37;1m
[33;1m
Eliminar varios elementos iguales
=================================[37;1m
[33;1m
Agregar, eliminar y volver a agregar
====================================[37;1m
[33;1m
Lista nula y vacia (ahora con quitar de posicion)
=================================================[37;1m
[32;1m✓ [37;1mNo se puede eliminar (con quitar de posición) de una lista nula
[32;1m✓ [37;1mNo se puede eliminar (con quitar de posición) de una lista vacía
==7297== 
==7297== HEAP SUMMARY:
==7297==     in use at exit: 0 bytes in 0 blocks
==7297==   total heap usage: 2 allocs, 2 frees, 4,120 bytes allocated
==7297== 
==7297== All heap blocks were freed -- no leaks are possible
==7297== 
==7297== For lists of detected and suppressed errors, rerun with: -s
==7297== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Eliminar un elemento
====================[37;1m
[33;1m
Eliminar varios elementos iguales
=================================[37;1m
[33;1m
Agregar, eliminar y volver a agregar
====================================[37;1m
[33;1m
Lista nula y vacia (ahora con quitar de posicion)
=================================================[37;1m
[33;1m
Eliminar un elemento de una posicion valida
===========================================[37;1m
[32;1m✓ [37;1mSe tiene una lista con un elemento
[32;1m✓ [37;1mLa lista no está vacía
[32;1m✓ [37;1mSe puede eliminar (con quitar de posición) el único elemento de una lista
[32;1m✓ [37;1mLa cantidad de elementos en la lista es 0
[32;1m✓ [37;1mLa lista está vacía
==7298== 
==7298== HEAP SUMMARY:
==7298==     in use at exit: 0 bytes in 0 blocks
==7298==   total heap usage: 3 allocs, 3 frees, 4,136 bytes allocated
==7298== 
==7298== All heap blocks were freed -- no leaks are possible
==7298== 
==7298== For lists of detected and suppressed errors, rerun with: -s
==7298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Eliminar un elemento
====================[37;1m
[33;1m
Eliminar varios elementos iguales
=================================[37;1m
[33;1m
Agregar, eliminar y volver a agregar
====================================[37;1m
[33;1m
Lista nula y vacia (ahora con quitar de posicion)
=================================================[37;1m
[33;1m
Eliminar un elemento de una posicion valida
===========================================[37;1m
[33;1m
Eliminar un elemento de una posicion inexistente
================================================[37;1m
[32;1m✓ [37;1mSe tiene una lista con un elemento
[32;1m✓ [37;1mLa lista no está vacía
[32;1m✓ [37;1mEliminar un elemento de una posicion inexistente quita el ultimo elemento
[32;1m✓ [37;1mLa cantidad de elementos en la lista es 0
[32;1m✓ [37;1mLa lista está vacía
==7299== 
==7299== HEAP SUMMARY:
==7299==     in use at exit: 0 bytes in 0 blocks
==7299==   total heap usage: 3 allocs, 3 frees, 4,136 bytes allocated
==7299== 
==7299== All heap blocks were freed -- no leaks are possible
==7299== 
==7299== For lists of detected and suppressed errors, rerun with: -s
==7299== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Eliminar un elemento
====================[37;1m
[33;1m
Eliminar varios elementos iguales
=================================[37;1m
[33;1m
Agregar, eliminar y volver a agregar
====================================[37;1m
[33;1m
Lista nula y vacia (ahora con quitar de posicion)
=================================================[37;1m
[33;1m
Eliminar un elemento de una posicion valida
===========================================[37;1m
[33;1m
Eliminar un elemento de una posicion inexistente
================================================[37;1m
[33;1m
Agregar, eliminar y volver a agregar (ahora con quitar de posicion)
===================================================================[37;1m
[32;1m✓ [37;1mSe tiene una lista con 3 elementos
[32;1m✓ [37;1mLa lista no está vacía
[32;1m✓ [37;1mSe puede eliminar (con quitar de posición) el primer elemento de la lista
[32;1m✓ [37;1mLa cantidad de elementos en la lista es 2
[32;1m✓ [37;1mLa lista no está vacía
[32;1m✓ [37;1mEl nuevo primer elemento es el correcto
[32;1m✓ [37;1mEl nuevo segundo elemento es el correcto
[32;1m✓ [37;1mSe inserta un nuevo elemento al final de la lista
[32;1m✓ [37;1mSe puede eliminar (con quitar de posición) el segundo elemento de la lista
[32;1m✓ [37;1mLa cantidad de elementos en la lista es 2
[32;1m✓ [37;1mLa lista no está vacía
[32;1m✓ [37;1mEl nuevo primer elemento es el correcto
[32;1m✓ [37;1mEl nuevo segundo elemento es el correcto
[32;1m✓ [37;1mEl nuevo primer elemento es el correcto
[32;1m✓ [37;1mEl nuevo segundo elemento es el correcto
[32;1m✓ [37;1mEl nuevo tercer elemento es el correcto
[32;1m✓ [37;1mEl nuevo cuarto elemento es el correcto
[32;1m✓ [37;1mSe insertan dos elementos más al final de la lista. La cantidad de elementos en la lista es 4
[32;1m✓ [37;1mSe eliminaron todos los elementos de la lista correctamente
[32;1m✓ [37;1mLa cantidad de elementos en la lista es 0
[32;1m✓ [37;1mLa lista está vacía
==7300== 
==7300== HEAP SUMMARY:
==7300==     in use at exit: 0 bytes in 0 blocks
==7300==   total heap usage: 8 allocs, 8 frees, 4,216 bytes allocated
==7300== 
==7300== All heap blocks were freed -- no leaks are possible
==7300== 
==7300== For lists of detected and suppressed errors, rerun with: -s
==7300== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Eliminar un elemento
====================[37;1m
[33;1m
Eliminar varios elementos iguales
=================================[37;1m
[33;1m
Agregar, eliminar y volver a agregar
====================================[37;1m
[33;1m
Lista nula y vacia (ahora con quitar de posicion)
=================================================[37;1m
[33;1m
Eliminar un elemento de una posicion valida
===========================================[37;1m
[33;1m
Eliminar un elemento de una posicion inexistente
================================================[37;1m
[33;1m
Agregar, eliminar y volver a agregar (ahora con quitar de posicion)
===================================================================[37;1m
==7292== 
==7292== HEAP SUMMARY:
==7292==     in use at exit: 0 bytes in 0 blocks
==7292==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7292== 
==7292== All heap blocks were freed -- no leaks are possible
==7292== 
==7292== For lists of detected and suppressed errors, rerun with: -s
==7292== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[32;1m✓ [37;1mEl primer elemento de una lista nula es NULL
[32;1m✓ [37;1mEl último elemento de una lista nula es NULL
==7302== 
==7302== HEAP SUMMARY:
==7302==     in use at exit: 0 bytes in 0 blocks
==7302==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7302== 
==7302== All heap blocks were freed -- no leaks are possible
==7302== 
==7302== For lists of detected and suppressed errors, rerun with: -s
==7302== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Lista valida
============[37;1m
[32;1m✓ [37;1mEl primer elemento de una lista vacía es NULL
[32;1m✓ [37;1mEl último elemento de una lista vacía es NULL
[32;1m✓ [37;1mEl primer elemento de una lista con un elemento es ese elemento
[32;1m✓ [37;1mEl último elemento de una lista con un elemento es ese elemento
[32;1m✓ [37;1mSe inserta un elemento. El primer elemento de una lista con dos elemento es el correcto
[32;1m✓ [37;1mEl último elemento es el correcto
[32;1m✓ [37;1mSe quita el último elemento. El primer elemento de una lista con un elemento es ese elemento
[32;1m✓ [37;1mEl último elemento de una lista con un elemento es ese elemento
[32;1m✓ [37;1mSe inserta un elemento al principio y otro al final. El primer elemento de una lista con dos elemento es el correcto
[32;1m✓ [37;1mEl último elemento es el correcto
[32;1m✓ [37;1mSe eliminan todos los elementos. El primer elemento de una lista vacía es NULL
[32;1m✓ [37;1mEl último elemento de una lista vacía es NULL
==7303== 
==7303== HEAP SUMMARY:
==7303==     in use at exit: 0 bytes in 0 blocks
==7303==   total heap usage: 6 allocs, 6 frees, 4,184 bytes allocated
==7303== 
==7303== All heap blocks were freed -- no leaks are possible
==7303== 
==7303== For lists of detected and suppressed errors, rerun with: -s
==7303== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Lista valida
============[37;1m
==7301== 
==7301== HEAP SUMMARY:
==7301==     in use at exit: 0 bytes in 0 blocks
==7301==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7301== 
==7301== All heap blocks were freed -- no leaks are possible
==7301== 
==7301== For lists of detected and suppressed errors, rerun with: -s
==7301== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[32;1m✓ [37;1mEl tamaño de una lista nula es 0
[32;1m✓ [37;1mUna lista nula está vacía
==7305== 
==7305== HEAP SUMMARY:
==7305==     in use at exit: 0 bytes in 0 blocks
==7305==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7305== 
==7305== All heap blocks were freed -- no leaks are possible
==7305== 
==7305== For lists of detected and suppressed errors, rerun with: -s
==7305== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Lista valida
============[37;1m
[32;1m✓ [37;1mEl tamaño de una lista recién creada es 0
[32;1m✓ [37;1mUna lista recién creada está vacía
[32;1m✓ [37;1mEl tamaño de una lista con un elemento es 1
[32;1m✓ [37;1mUna lista con un elemento no está vacía
[32;1m✓ [37;1mEl tamaño de una lista con dos elemento es 2
[32;1m✓ [37;1mUna lista con dos elemento no está vacía
[32;1m✓ [37;1mSe elimina un elemento de la lista. El tamaño de una lista con un elemento es 1
[32;1m✓ [37;1mUna lista con un elemento no está vacía
[32;1m✓ [37;1mSe elimina el otro elemento de la lista. El tamaño de una lista sin elementos es 0
[32;1m✓ [37;1mUna lista sin elementos está vacía
==7306== 
==7306== HEAP SUMMARY:
==7306==     in use at exit: 0 bytes in 0 blocks
==7306==   total heap usage: 6 allocs, 6 frees, 4,184 bytes allocated
==7306== 
==7306== All heap blocks were freed -- no leaks are possible
==7306== 
==7306== For lists of detected and suppressed errors, rerun with: -s
==7306== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
Lista nula y vacia
==================[37;1m
[33;1m
Lista valida
============[37;1m
==7304== 
==7304== HEAP SUMMARY:
==7304==     in use at exit: 0 bytes in 0 blocks
==7304==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7304== 
==7304== All heap blocks were freed -- no leaks are possible
==7304== 
==7304== For lists of detected and suppressed errors, rerun with: -s
==7304== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
PRUEBAS DEL ITERADOR INTERNO
============================[37;1m
[33;1m
Lista nula
==========[37;1m
[32;1m✓ [37;1mIterar una lista nula devuelve 0.
==7308== 
==7308== HEAP SUMMARY:
==7308==     in use at exit: 0 bytes in 0 blocks
==7308==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7308== 
==7308== All heap blocks were freed -- no leaks are possible
==7308== 
==7308== For lists of detected and suppressed errors, rerun with: -s
==7308== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
PRUEBAS DEL ITERADOR INTERNO
============================[37;1m
[33;1m
Lista nula
==========[37;1m
[33;1m
Funcion nula
============[37;1m
[32;1m✓ [37;1mNo se puede aplicar una función nula a la lista.
==7309== 
==7309== HEAP SUMMARY:
==7309==     in use at exit: 0 bytes in 0 blocks
==7309==   total heap usage: 2 allocs, 2 frees, 4,120 bytes allocated
==7309== 
==7309== All heap blocks were freed -- no leaks are possible
==7309== 
==7309== For lists of detected and suppressed errors, rerun with: -s
==7309== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
PRUEBAS DEL ITERADOR INTERNO
============================[37;1m
[33;1m
Lista nula
==========[37;1m
[33;1m
Funcion nula
============[37;1m
[33;1m
Lista vacia
===========[37;1m
[32;1m✓ [37;1mIterar una lista vacía devuelve 0 elementos iterados.
==7310== 
==7310== HEAP SUMMARY:
==7310==     in use at exit: 0 bytes in 0 blocks
==7310==   total heap usage: 2 allocs, 2 frees, 4,120 bytes allocated
==7310== 
==7310== All heap blocks were freed -- no leaks are possible
==7310== 
==7310== For lists of detected and suppressed errors, rerun with: -s
==7310== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
PRUEBAS DEL ITERADOR INTERNO
============================[37;1m
[33;1m
Lista nula
==========[37;1m
[33;1m
Funcion nula
============[37;1m
[33;1m
Lista vacia
===========[37;1m
[33;1m
Iterar totalmente la lista
==========================[37;1m
[32;1m✓ [37;1mIterar una lista con elementos en su totalidad devuelve la cantidad de elementos de la lista.
==7311== 
==7311== HEAP SUMMARY:
==7311==     in use at exit: 0 bytes in 0 blocks
==7311==   total heap usage: 5 allocs, 5 frees, 4,168 bytes allocated
==7311== 
==7311== All heap blocks were freed -- no leaks are possible
==7311== 
==7311== For lists of detected and suppressed errors, rerun with: -s
==7311== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
PRUEBAS DEL ITERADOR INTERNO
============================[37;1m
[33;1m
Lista nula
==========[37;1m
[33;1m
Funcion nula
============[37;1m
[33;1m
Lista vacia
===========[37;1m
[33;1m
Iterar totalmente la lista
==========================[37;1m
[33;1m
Iterar parcialmente la lista
============================[37;1m
[32;1m✓ [37;1mBuscar el primer elemento de la lista con el it interno devuelve 1 elemento iterado
[32;1m✓ [37;1mBuscar el segundo elemento de la lista con el it interno devuelve 2 elementos iterados
[32;1m✓ [37;1mBuscar el tercer elemento de la lista con el it interno devuelve 3 elementos iterados
[32;1m✓ [37;1mSe inserta un elemento al final. Buscar ese elemento con el it interno devuelve 4 elementos iterados
[32;1m✓ [37;1mBuscar el tercer elemento de una lista con 4 elementos con el it interno devuelve 3 elementos iterados
==7312== 
==7312== HEAP SUMMARY:
==7312==     in use at exit: 0 bytes in 0 blocks
==7312==   total heap usage: 6 allocs, 6 frees, 4,184 bytes allocated
==7312== 
==7312== All heap blocks were freed -- no leaks are possible
==7312== 
==7312== For lists of detected and suppressed errors, rerun with: -s
==7312== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
PRUEBAS DEL ITERADOR INTERNO
============================[37;1m
[33;1m
Lista nula
==========[37;1m
[33;1m
Funcion nula
============[37;1m
[33;1m
Lista vacia
===========[37;1m
[33;1m
Iterar totalmente la lista
==========================[37;1m
[33;1m
Iterar parcialmente la lista
============================[37;1m
==7307== 
==7307== HEAP SUMMARY:
==7307==     in use at exit: 0 bytes in 0 blocks
==7307==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7307== 
==7307== All heap blocks were freed -- no leaks are possible
==7307== 
==7307== For lists of detected and suppressed errors, rerun with: -s
==7307== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
PRUEBAS DEL ITERADOR INTERNO
============================[37;1m
[33;1m
PRUEBAS DEL ITERADOR EXTERNO
============================[37;1m
[33;1m
Lista nula
==========[37;1m
[32;1m✓ [37;1mNo se puede crear el iterador externo de una lista nula
[32;1m✓ [37;1mNo se puede verificar si un iterador ulo tiene siguiente
[32;1m✓ [37;1mNo se puede avanzar un iterador nulo
[32;1m✓ [37;1mNo se puede verificar el elemento actual de un iterador nulo
[32;1m✓ [37;1mNo hubo problema al intentar destruir un iterador nulo
==7314== 
==7314== HEAP SUMMARY:
==7314==     in use at exit: 0 bytes in 0 blocks
==7314==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7314== 
==7314== All heap blocks were freed -- no leaks are possible
==7314== 
==7314== For lists of detected and suppressed errors, rerun with: -s
==7314== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
PRUEBAS DEL ITERADOR INTERNO
============================[37;1m
[33;1m
PRUEBAS DEL ITERADOR EXTERNO
============================[37;1m
[33;1m
Lista nula
==========[37;1m
[33;1m
Iterar una lista valida con un iterador externo
===============================================[37;1m
[32;1m✓ [37;1mSe crea un iterador externo
[32;1m✓ [37;1mSe recorren todos los elementos de la lista.
[32;1m✓ [37;1mSe destruye el iterador viejo
[32;1m✓ [37;1mSe crea un nuevo iterador para una lista con 3 elementos, y el iterador tiene siguiente
[32;1m✓ [37;1mEl elemento actual es el primero de la lista
[32;1m✓ [37;1mSe puede avanzar una posición del iterador
[32;1m✓ [37;1mEl elemento actual es el segundo de la lista
[32;1m✓ [37;1mEl iterador esta parado sobre un elemento valido
[32;1m✓ [37;1mSe puede avanzar una posición del iterador
[32;1m✓ [37;1mEl elemento actual es el tercero de la lista
[32;1m✓ [37;1mEl iterador esta parado sobre un elemento valido
[32;1m✓ [37;1mAvanzamos a un elemento que no es valido
[32;1m✓ [37;1mEl iterador ya no esta parado sobre un elemento valido
==7315== 
==7315== HEAP SUMMARY:
==7315==     in use at exit: 0 bytes in 0 blocks
==7315==   total heap usage: 9 allocs, 9 frees, 4,232 bytes allocated
==7315== 
==7315== All heap blocks were freed -- no leaks are possible
==7315== 
==7315== For lists of detected and suppressed errors, rerun with: -s
==7315== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
PRUEBAS DEL ITERADOR INTERNO
============================[37;1m
[33;1m
PRUEBAS DEL ITERADOR EXTERNO
============================[37;1m
[33;1m
Lista nula
==========[37;1m
[33;1m
Iterar una lista valida con un iterador externo
===============================================[37;1m
==7313== 
==7313== HEAP SUMMARY:
==7313==     in use at exit: 0 bytes in 0 blocks
==7313==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7313== 
==7313== All heap blocks were freed -- no leaks are possible
==7313== 
==7313== For lists of detected and suppressed errors, rerun with: -s
==7313== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[33;1m
Pruebas con lista vacía
========================[37;1m
[33;1m
Pruebas de inserción
=====================[37;1m
[33;1m
Pruebas de borrar un solo elemento
==================================[37;1m
[33;1m
Pruebas de borrado en posicion arbitraria
=========================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al final
===============================================[37;1m
[33;1m
Pruebas de insercion y borrado siempre al inicio
================================================[37;1m
[33;1m
Pruebas con NULL
================[37;1m
[33;1m
Pruebas con muchos elementos
============================[37;1m
[33;1m
Pruebas de insercion en posicion arbitraria
===========================================[37;1m
[33;1m
Pruebas de iterador externo
===========================[37;1m
[33;1m
Pruebas de iterador interno
===========================[37;1m
[33;1m
Pruebas de búsqueda
====================[37;1m
[33;1m
Pruebas de destruir todo
========================[37;1m
[33;1m
Pruebas de pila (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
Pruebas de cola (La implementaste con la lista, ¿No?)
======================================================[37;1m
[33;1m
------------ MÁS PRUEBAS DEL TDA LISTA ------------
====================================================[37;1m
[33;1m
PRUEBAS DE CREACIÓN Y DESTRUCCIÓN
===================================[37;1m
[33;1m
PRUEBAS DE INSERCIÓN
=====================[37;1m
[33;1m
PRUEBAS DE ELIMINACIÓN
=======================[37;1m
[33;1m
PRUEBAS DE PRIMERO Y ÚLTIMO
============================[37;1m
[33;1m
PRUEBAS DE TAMAÑO Y LISTA VACÍA
=================================[37;1m
[33;1m
PRUEBAS DEL ITERADOR INTERNO
============================[37;1m
[33;1m
PRUEBAS DEL ITERADOR EXTERNO
============================[37;1m
[37;1m
---------------------------------
341 pruebas corridas, 0 errores - OK
[0m==7266== 
==7266== HEAP SUMMARY:
==7266==     in use at exit: 0 bytes in 0 blocks
==7266==   total heap usage: 1 allocs, 1 frees, 4,096 bytes allocated
==7266== 
==7266== All heap blocks were freed -- no leaks are possible
==7266== 
==7266== For lists of detected and suppressed errors, rerun with: -s
==7266== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
